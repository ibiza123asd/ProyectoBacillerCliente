
package Services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Services", targetNamespace = "http://Servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Services {


    /**
     * 
     * @param cita
     */
    @WebMethod
    @RequestWrapper(localName = "registrarCita", targetNamespace = "http://Servicios/", className = "Services.RegistrarCita")
    @ResponseWrapper(localName = "registrarCitaResponse", targetNamespace = "http://Servicios/", className = "Services.RegistrarCitaResponse")
    @Action(input = "http://Servicios/Services/registrarCitaRequest", output = "http://Servicios/Services/registrarCitaResponse")
    public void registrarCita(
        @WebParam(name = "cita", targetNamespace = "")
        Cita cita);

    /**
     * 
     * @param documento
     * @return
     *     returns java.util.List<Services.AnyTypeArray>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCitas", targetNamespace = "http://Servicios/", className = "Services.FindCitas")
    @ResponseWrapper(localName = "findCitasResponse", targetNamespace = "http://Servicios/", className = "Services.FindCitasResponse")
    @Action(input = "http://Servicios/Services/findCitasRequest", output = "http://Servicios/Services/findCitasResponse")
    public List<AnyTypeArray> findCitas(
        @WebParam(name = "documento", targetNamespace = "")
        String documento);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Servicios/", className = "Services.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Servicios/", className = "Services.HelloResponse")
    @Action(input = "http://Servicios/Services/helloRequest", output = "http://Servicios/Services/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param idMedico
     * @return
     *     returns Services.MedicoDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarMedico", targetNamespace = "http://Servicios/", className = "Services.EncontrarMedico")
    @ResponseWrapper(localName = "encontrarMedicoResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarMedicoResponse")
    @Action(input = "http://Servicios/Services/encontrarMedicoRequest", output = "http://Servicios/Services/encontrarMedicoResponse")
    public MedicoDTO encontrarMedico(
        @WebParam(name = "idMedico", targetNamespace = "")
        int idMedico);

    /**
     * 
     * @param idAgenda
     * @return
     *     returns Services.AgendaDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarAgenda", targetNamespace = "http://Servicios/", className = "Services.EncontrarAgenda")
    @ResponseWrapper(localName = "encontrarAgendaResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarAgendaResponse")
    @Action(input = "http://Servicios/Services/encontrarAgendaRequest", output = "http://Servicios/Services/encontrarAgendaResponse")
    public AgendaDTO encontrarAgenda(
        @WebParam(name = "idAgenda", targetNamespace = "")
        int idAgenda);

    /**
     * 
     * @param codigo
     * @return
     *     returns Services.CitaDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarCita", targetNamespace = "http://Servicios/", className = "Services.EncontrarCita")
    @ResponseWrapper(localName = "encontrarCitaResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarCitaResponse")
    @Action(input = "http://Servicios/Services/encontrarCitaRequest", output = "http://Servicios/Services/encontrarCitaResponse")
    public CitaDTO encontrarCita(
        @WebParam(name = "codigo", targetNamespace = "")
        int codigo);

    /**
     * 
     * @param paciente
     */
    @WebMethod
    @RequestWrapper(localName = "updatePaciente", targetNamespace = "http://Servicios/", className = "Services.UpdatePaciente")
    @ResponseWrapper(localName = "updatePacienteResponse", targetNamespace = "http://Servicios/", className = "Services.UpdatePacienteResponse")
    @Action(input = "http://Servicios/Services/updatePacienteRequest", output = "http://Servicios/Services/updatePacienteResponse")
    public void updatePaciente(
        @WebParam(name = "paciente", targetNamespace = "")
        Paciente paciente);

    /**
     * 
     * @param password
     * @param documento
     * @return
     *     returns Services.Paciente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logeo", targetNamespace = "http://Servicios/", className = "Services.Logeo")
    @ResponseWrapper(localName = "logeoResponse", targetNamespace = "http://Servicios/", className = "Services.LogeoResponse")
    @Action(input = "http://Servicios/Services/logeoRequest", output = "http://Servicios/Services/logeoResponse")
    public Paciente logeo(
        @WebParam(name = "documento", targetNamespace = "")
        String documento,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<Services.Especialidad>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarEspecialidades", targetNamespace = "http://Servicios/", className = "Services.ListarEspecialidades")
    @ResponseWrapper(localName = "listarEspecialidadesResponse", targetNamespace = "http://Servicios/", className = "Services.ListarEspecialidadesResponse")
    @Action(input = "http://Servicios/Services/listarEspecialidadesRequest", output = "http://Servicios/Services/listarEspecialidadesResponse")
    public List<Especialidad> listarEspecialidades();

    /**
     * 
     * @param idEspecialidad
     * @return
     *     returns Services.Especialidad
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarEspecialidad", targetNamespace = "http://Servicios/", className = "Services.EncontrarEspecialidad")
    @ResponseWrapper(localName = "encontrarEspecialidadResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarEspecialidadResponse")
    @Action(input = "http://Servicios/Services/encontrarEspecialidadRequest", output = "http://Servicios/Services/encontrarEspecialidadResponse")
    public Especialidad encontrarEspecialidad(
        @WebParam(name = "idEspecialidad", targetNamespace = "")
        int idEspecialidad);

    /**
     * 
     * @param codMedico
     * @return
     *     returns java.util.List<Services.AgendaDTO>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarAgendaByMedico", targetNamespace = "http://Servicios/", className = "Services.ListarAgendaByMedico")
    @ResponseWrapper(localName = "listarAgendaByMedicoResponse", targetNamespace = "http://Servicios/", className = "Services.ListarAgendaByMedicoResponse")
    @Action(input = "http://Servicios/Services/listarAgendaByMedicoRequest", output = "http://Servicios/Services/listarAgendaByMedicoResponse")
    public List<AgendaDTO> listarAgendaByMedico(
        @WebParam(name = "codMedico", targetNamespace = "")
        int codMedico);

    /**
     * 
     * @param paciente
     */
    @WebMethod
    @RequestWrapper(localName = "registrarPaciente", targetNamespace = "http://Servicios/", className = "Services.RegistrarPaciente")
    @ResponseWrapper(localName = "registrarPacienteResponse", targetNamespace = "http://Servicios/", className = "Services.RegistrarPacienteResponse")
    @Action(input = "http://Servicios/Services/registrarPacienteRequest", output = "http://Servicios/Services/registrarPacienteResponse")
    public void registrarPaciente(
        @WebParam(name = "paciente", targetNamespace = "")
        Paciente paciente);

    /**
     * 
     * @param documento
     * @return
     *     returns Services.Paciente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarPaciente", targetNamespace = "http://Servicios/", className = "Services.EncontrarPaciente")
    @ResponseWrapper(localName = "encontrarPacienteResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarPacienteResponse")
    @Action(input = "http://Servicios/Services/encontrarPacienteRequest", output = "http://Servicios/Services/encontrarPacienteResponse")
    public Paciente encontrarPaciente(
        @WebParam(name = "documento", targetNamespace = "")
        String documento);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "encontrarUltimoRegistro", targetNamespace = "http://Servicios/", className = "Services.EncontrarUltimoRegistro")
    @ResponseWrapper(localName = "encontrarUltimoRegistroResponse", targetNamespace = "http://Servicios/", className = "Services.EncontrarUltimoRegistroResponse")
    @Action(input = "http://Servicios/Services/encontrarUltimoRegistroRequest", output = "http://Servicios/Services/encontrarUltimoRegistroResponse")
    public int encontrarUltimoRegistro();

    /**
     * 
     * @param codEspecialidad
     * @return
     *     returns java.util.List<Services.MedicoDTO>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarMedicoByEspecialidad", targetNamespace = "http://Servicios/", className = "Services.ListarMedicoByEspecialidad")
    @ResponseWrapper(localName = "listarMedicoByEspecialidadResponse", targetNamespace = "http://Servicios/", className = "Services.ListarMedicoByEspecialidadResponse")
    @Action(input = "http://Servicios/Services/listarMedicoByEspecialidadRequest", output = "http://Servicios/Services/listarMedicoByEspecialidadResponse")
    public List<MedicoDTO> listarMedicoByEspecialidad(
        @WebParam(name = "codEspecialidad", targetNamespace = "")
        int codEspecialidad);

}
